{"version":3,"sources":["Products.js"],"names":["getProducts","req","res","role","Product","findAll","attributes","include","model","User","response","where","userId","status","json","msg","message","getProductById","findOne","uuid","params","id","product","Op","and","createProduct","body","name","price","create","updateProduct","update","deleteProduct","destroy"],"mappings":"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","sourcesContent":["import Product from \"../model/ProductModel.js\";\r\nimport User from \"../model/UserModel.js\";\r\nimport {Op} from \"sequelize\";\r\n\r\nexport const getProducts = async (req, res) =>{\r\n    try {\r\n        let response;\r\n        if(req.role === \"admin\"){\r\n            response = await Product.findAll({\r\n                attributes:['uuid','name','price'],\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }else{\r\n            response = await Product.findAll({\r\n                attributes:['uuid','name','price'],\r\n                where:{\r\n                    userId: req.userId\r\n                },\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }\r\n        res.status(200).json(response);\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const getProductById = async(req, res) =>{\r\n    try {\r\n        const product = await Product.findOne({\r\n            where:{\r\n                uuid: req.params.id\r\n            }\r\n        });\r\n        if(!product) return res.status(404).json({msg: \"Data tidak ditemukan\"});\r\n        let response;\r\n        if(req.role === \"admin\"){\r\n            response = await Product.findOne({\r\n                attributes:['uuid','name','price'],\r\n                where:{\r\n                    id: product.id\r\n                },\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }else{\r\n            response = await Product.findOne({\r\n                attributes:['uuid','name','price'],\r\n                where:{\r\n                    [Op.and]:[{id: product.id}, {userId: req.userId}]\r\n                },\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }\r\n        res.status(200).json(response);\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const createProduct = async(req, res) =>{\r\n    const {name, price} = req.body;\r\n    try {\r\n        await Product.create({\r\n            name: name,\r\n            price: price,\r\n            userId: req.userId\r\n        });\r\n        res.status(201).json({msg: \"Product Created Successfuly\"});\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const updateProduct = async(req, res) =>{\r\n    try {\r\n        const product = await Product.findOne({\r\n            where:{\r\n                uuid: req.params.id\r\n            }\r\n        });\r\n        if(!product) return res.status(404).json({msg: \"Data tidak ditemukan\"});\r\n        const {name, price} = req.body;\r\n        if(req.role === \"admin\"){\r\n            await Product.update({name, price},{\r\n                where:{\r\n                    id: product.id\r\n                }\r\n            });\r\n        }else{\r\n            if(req.userId !== product.userId) return res.status(403).json({msg: \"Akses terlarang\"});\r\n            await Product.update({name, price},{\r\n                where:{\r\n                    [Op.and]:[{id: product.id}, {userId: req.userId}]\r\n                }\r\n            });\r\n        }\r\n        res.status(200).json({msg: \"Product updated successfuly\"});\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const deleteProduct = async(req, res) =>{\r\n    try {\r\n        const product = await Product.findOne({\r\n            where:{\r\n                uuid: req.params.id\r\n            }\r\n        });\r\n        if(!product) return res.status(404).json({msg: \"Data tidak ditemukan\"});\r\n        const {name, price} = req.body;\r\n        if(req.role === \"admin\"){\r\n            await Product.destroy({\r\n                where:{\r\n                    id: product.id\r\n                }\r\n            });\r\n        }else{\r\n            if(req.userId !== product.userId) return res.status(403).json({msg: \"Akses terlarang\"});\r\n            await Product.destroy({\r\n                where:{\r\n                    [Op.and]:[{id: product.id}, {userId: req.userId}]\r\n                }\r\n            });\r\n        }\r\n        res.status(200).json({msg: \"Product deleted successfuly\"});\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}"],"file":"Products.dev.js"}
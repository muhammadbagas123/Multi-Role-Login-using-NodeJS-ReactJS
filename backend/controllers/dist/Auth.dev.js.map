{"version":3,"sources":["Auth.js"],"names":["Login","req","res","User","findOne","where","email","body","user","status","json","msg","argon2","verify","password","match","session","userId","uuid","name","role","Me","attributes","logOut","destroy","err"],"mappings":"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","sourcesContent":["import User from \"../model/UserModel.js\";\r\nimport argon2 from \"argon2\";\r\n\r\nexport const Login = async (req, res) =>{\r\n    const user = await User.findOne({\r\n        where: {\r\n            email: req.body.email\r\n        }\r\n    });\r\n    if(!user) return res.status(404).json({msg: \"User tidak ditemukan\"});\r\n    const match = await argon2.verify(user.password, req.body.password);\r\n    if(!match) return res.status(400).json({msg: \"Wrong Password\"});\r\n    req.session.userId = user.uuid;\r\n    const uuid = user.uuid;\r\n    const name = user.name;\r\n    const email = user.email;\r\n    const role = user.role;\r\n    res.status(200).json({uuid, name, email, role});\r\n}\r\n\r\nexport const Me = async (req, res) =>{\r\n    if(!req.session.userId){\r\n        return res.status(401).json({msg: \"Mohon login ke akun Anda!\"});\r\n    }\r\n    const user = await User.findOne({\r\n        attributes:['uuid','name','email','role'],\r\n        where: {\r\n            uuid: req.session.userId\r\n        }\r\n    });\r\n    if(!user) return res.status(404).json({msg: \"User tidak ditemukan\"});\r\n    res.status(200).json(user);\r\n}\r\n\r\nexport const logOut = (req, res) =>{\r\n    req.session.destroy((err)=>{\r\n        if(err) return res.status(400).json({msg: \"Tidak dapat logout\"});\r\n        res.status(200).json({msg: \"Anda telah logout\"});\r\n    });\r\n}"],"file":"Auth.dev.js"}
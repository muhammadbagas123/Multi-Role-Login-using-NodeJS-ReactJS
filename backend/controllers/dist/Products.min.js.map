{"version":3,"sources":["Products.js"],"names":["_ProductModel","_interopRequireDefault","require","_UserModel","_sequelize","getProducts","req","res","response","regeneratorRuntime","async","_context","prev","next","role","awrap","Product","findAll","attributes","include","model","User","sent","where","userId","status","json","t0","msg","message","stop","product","_context2","findOne","uuid","params","id","abrupt","_defineProperty","Op","and","createProduct","_req$body","name","price","_context3","body","create","updateProduct","_req$body2","_context4","update","deleteProduct","_req$body3","_context5","destroy"],"mappings":"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","file":"Products.min.js","sourcesContent":["import Product from \"../model/ProductModel.js\";\r\nimport User from \"../model/UserModel.js\";\r\nimport {Op} from \"sequelize\";\r\n\r\nexport const getProducts = async (req, res) =>{\r\n    try {\r\n        let response;\r\n        if(req.role === \"admin\"){\r\n            response = await Product.findAll({\r\n                attributes:['uuid','name','price'],\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }else{\r\n            response = await Product.findAll({\r\n                attributes:['uuid','name','price'],\r\n                where:{\r\n                    userId: req.userId\r\n                },\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }\r\n        res.status(200).json(response);\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const getProductById = async(req, res) =>{\r\n    try {\r\n        const product = await Product.findOne({\r\n            where:{\r\n                uuid: req.params.id\r\n            }\r\n        });\r\n        if(!product) return res.status(404).json({msg: \"Data tidak ditemukan\"});\r\n        let response;\r\n        if(req.role === \"admin\"){\r\n            response = await Product.findOne({\r\n                attributes:['uuid','name','price'],\r\n                where:{\r\n                    id: product.id\r\n                },\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }else{\r\n            response = await Product.findOne({\r\n                attributes:['uuid','name','price'],\r\n                where:{\r\n                    [Op.and]:[{id: product.id}, {userId: req.userId}]\r\n                },\r\n                include:[{\r\n                    model: User,\r\n                    attributes:['name','email']\r\n                }]\r\n            });\r\n        }\r\n        res.status(200).json(response);\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const createProduct = async(req, res) =>{\r\n    const {name, price} = req.body;\r\n    try {\r\n        await Product.create({\r\n            name: name,\r\n            price: price,\r\n            userId: req.userId\r\n        });\r\n        res.status(201).json({msg: \"Product Created Successfuly\"});\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const updateProduct = async(req, res) =>{\r\n    try {\r\n        const product = await Product.findOne({\r\n            where:{\r\n                uuid: req.params.id\r\n            }\r\n        });\r\n        if(!product) return res.status(404).json({msg: \"Data tidak ditemukan\"});\r\n        const {name, price} = req.body;\r\n        if(req.role === \"admin\"){\r\n            await Product.update({name, price},{\r\n                where:{\r\n                    id: product.id\r\n                }\r\n            });\r\n        }else{\r\n            if(req.userId !== product.userId) return res.status(403).json({msg: \"Akses terlarang\"});\r\n            await Product.update({name, price},{\r\n                where:{\r\n                    [Op.and]:[{id: product.id}, {userId: req.userId}]\r\n                }\r\n            });\r\n        }\r\n        res.status(200).json({msg: \"Product updated successfuly\"});\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}\r\n\r\nexport const deleteProduct = async(req, res) =>{\r\n    try {\r\n        const product = await Product.findOne({\r\n            where:{\r\n                uuid: req.params.id\r\n            }\r\n        });\r\n        if(!product) return res.status(404).json({msg: \"Data tidak ditemukan\"});\r\n        const {name, price} = req.body;\r\n        if(req.role === \"admin\"){\r\n            await Product.destroy({\r\n                where:{\r\n                    id: product.id\r\n                }\r\n            });\r\n        }else{\r\n            if(req.userId !== product.userId) return res.status(403).json({msg: \"Akses terlarang\"});\r\n            await Product.destroy({\r\n                where:{\r\n                    [Op.and]:[{id: product.id}, {userId: req.userId}]\r\n                }\r\n            });\r\n        }\r\n        res.status(200).json({msg: \"Product deleted successfuly\"});\r\n    } catch (error) {\r\n        res.status(500).json({msg: error.message});\r\n    }\r\n}"]}
{"version":3,"sources":["Auth.js"],"names":["_UserModel","_interopRequireDefault","require","_argon","Login","req","res","user","uuid","name","email","role","regeneratorRuntime","async","_context","prev","next","awrap","User","findOne","where","body","sent","abrupt","status","json","msg","argon2","verify","password","session","userId","stop","Me","_context2","attributes","logOut","destroy","err"],"mappings":"mHAAA,IAAAA,WAAAC,uBAAAC,QAAA,0BACAC,OAAAF,uBAAAC,QAAA,mFAEO,IAAME,MAAQ,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MACEC,WAAAA,QAAKC,QAAQ,CAC5BC,MAAO,CACHV,MAAOL,EAAIgB,KAAKX,UAHP,KAAA,EAAA,GACXH,EADWO,EAAAQ,KAAA,CAAAR,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAS,OAAA,SAFrBjB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,IAAA,0BAEqB,KAAA,EAAA,OAAAZ,EAAAE,KAAA,EAAAJ,mBAAAK,MAOGU,OAAAA,QAAOC,OAAOrB,EAAKsB,SAAUxB,EAAIgB,KAAKQ,WAPzC,KAAA,EAAA,GAAAf,EAAAQ,KAAA,CAAAR,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAS,OAAA,SAQCjB,EAAIkB,OAAO,KAAKC,KAAK,CAACC,IAAK,oBAR5B,KAAA,GASjBrB,EAAIyB,QAAQC,OAASxB,EAAKC,KATZA,EAAGD,EAARH,KAAQK,EAAAF,EAAAE,KAAAC,EAAAH,EAAAG,MAAAC,EAAAJ,EAAAI,KAAAL,EAAAkB,OAAA,KAAAC,KAAA,CAAAjB,KAAAA,EAAAC,KAAAA,EAAAC,MAAAA,EAAAC,KAAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAAkB,+BAAA,IAAAC,GAAA,SAAA5B,EAAAC,GAAA,IAAAC,EAAA,OAAAK,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,GAEbI,EAAAA,QAAOW,OAFM,CAAAG,EAAAlB,KAAA,EAAA,MAAA,OAAAkB,EAAAX,OAAA,SAGTb,EAAKc,OAAMH,KAAKX,KAAAA,CAAAA,IAAAA,+BAHP,KAAA,EAAA,OAAAwB,EAAAlB,KAAA,EAAAJ,mBAAAK,MAAAC,WAAAA,QAAAC,QAAA,CAsBbgB,WAAW,CAAC,OAAO,OAAO,QAAQ,QAtBrBf,MAAA,CACXb,KADWF,EAAAyB,QAAAC,WAAA,KAAA,EAAA,GACexB,EADf2B,EAAAZ,KAAA,CAAAY,EAAAlB,KAAA,EAAA,MAAA,OAAAkB,EAAAX,OAAA,SAAAjB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,IAAA,0BAAA,KAAA,EAAApB,EAAAkB,OAAA,KAAAC,KAAAlB,GAAA,KAAA,EAAA,IAAA,MAAA,OAAA2B,EAAAF,yBAAA,IAAAI,OAAA,SAAA/B,EAAAC,GAMsBoB,EAAAA,QAAGW,QAAE,SAAAC,GAAN,GAArBA,EANA,OAAAhC,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,IAAA,uBAkCbpB,EAAIkB,OAAO,KAAKC,KAAK,CAACC,IAAK","file":"Auth.min.js","sourcesContent":["import User from \"../model/UserModel.js\";\r\nimport argon2 from \"argon2\";\r\n\r\nexport const Login = async (req, res) =>{\r\n    const user = await User.findOne({\r\n        where: {\r\n            email: req.body.email\r\n        }\r\n    });\r\n    if(!user) return res.status(404).json({msg: \"User tidak ditemukan\"});\r\n    const match = await argon2.verify(user.password, req.body.password);\r\n    if(!match) return res.status(400).json({msg: \"Wrong Password\"});\r\n    req.session.userId = user.uuid;\r\n    const uuid = user.uuid;\r\n    const name = user.name;\r\n    const email = user.email;\r\n    const role = user.role;\r\n    res.status(200).json({uuid, name, email, role});\r\n}\r\n\r\nexport const Me = async (req, res) =>{\r\n    if(!req.session.userId){\r\n        return res.status(401).json({msg: \"Mohon login ke akun Anda!\"});\r\n    }\r\n    const user = await User.findOne({\r\n        attributes:['uuid','name','email','role'],\r\n        where: {\r\n            uuid: req.session.userId\r\n        }\r\n    });\r\n    if(!user) return res.status(404).json({msg: \"User tidak ditemukan\"});\r\n    res.status(200).json(user);\r\n}\r\n\r\nexport const logOut = (req, res) =>{\r\n    req.session.destroy((err)=>{\r\n        if(err) return res.status(400).json({msg: \"Tidak dapat logout\"});\r\n        res.status(200).json({msg: \"Anda telah logout\"});\r\n    });\r\n}"]}